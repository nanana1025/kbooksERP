<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kbookERP.custom.order.OrderMapper">

	<select id="getSaleDataListRate"  parameterType="java.util.Map" resultType="java.util.Map">
    	/* orderMapper.getSaleDataListRate */

		SELECT
						S1.SHOPCD
						, S1.DEPTCD
						, S1.GROUPCD
						, S1.STANDCD
						, S1.BOOKCD
						, M8.BOOKNM
						, M8.PRICE
						, M8.STOCK
						, P4.STORECD
						, SUM(S1.TRUST_SALE_COUNT + S1.PAY_SALE_COUNT) AS SALE_SUM
						, M2.PURCHNM
						, M7.PURCHCD
						, M2.ORD_GROUPCD
						, NVL(M4.AUTHORNM, ' ') AUTHORNM

			FROM HSA11 S1 LEFT JOIN HMA08 M8 ON (S1.SHOPCD = M8.SHOPCD AND S1.BOOKCD = M8.BOOKCD)
									LEFT JOIN HPO04 P4 ON (S1.SHOPCD = P4.SHOPCD AND S1.TMNO = P4.POSNO)
									LEFT JOIN HMA07 M7 ON (S1.SHOPCD = M7.SHOPCD AND S1.BOOKCD = M7.BOOKCD AND M7.PUR_PROCESS = 1)
									LEFT JOIN HMA02 M2 ON (M7.PURCHCD = M2.PURCHCD)
									LEFT JOIN HMA10 M10 ON (S1.SHOPCD = M10.SHOPCD AND M8.SHOPCD = M10.SHOPCD AND M8.DEPTCD = M10.DEPTCD AND M8.GROUPCD = M10.GROUPCD AND M8.STANDCD = M10.SHOPCD)
									LEFT JOIN HMA04 M4 ON (S1.BOOKCD = M4.BOOKCD)


			WHERE S1.SHOPCD = #{SHOPCD}
			<if test='DT_FROM != null'> AND S1.BOOK_DATE >= #{DT_FROM} </if>
			<if test='DT_TO != null'> AND S1.BOOK_DATE <![CDATA[<=]]> #{DT_TO} </if>
			<if test='RATE != null'> AND M10.RATE = #{RATE} </if>
			<if test='STORE_TYPE != null'>
				<choose>
				 		<when test='STORE_TYPE.equals("SINGLE")'>
				 			<if test='STORECD != null'>AND P4.STORECD = #{STORECD}</if>
				 		</when>
				 		<when test='STORE_TYPE.equals("MULTI")'>
				 			<if test='STORECD_S != null'>AND P4.STORECD  BETWEEN #{STORECD_S} AND #{STORECD_E}</if>
				 		</when>
				 		<otherwise>
				 			<if test='STORECD != null'>AND P4.STORECD = #{STORECD}</if>
				 		</otherwise>
				 	</choose>
			 	</if>

			HAVING SUM(S1.TRUST_SALE_COUNT + S1.PAY_SALE_COUNT) > 0
			GROUP BY S1.SHOPCD, S1.DEPTCD, S1.GROUPCD, S1.STANDCD, S1.BOOKCD, M8.BOOKNM, M8.PRICE, M8.STOCK, P4.STORECD, M2.PURCHNM, M7.PURCHCD, M2.ORD_GROUPCD, M4.AUTHORNM

			ORDER BY M2.PURCHNM, M8.BOOKNM

    </select>

    <select id="getSaleDataListGroup"  parameterType="java.util.Map" resultType="java.util.Map">
    	/* orderMapper.getSaleDataListGroup */

		SELECT
						S1.SHOPCD
						, S1.DEPTCD
						, S1.GROUPCD
						, S1.STANDCD
						, S1.BOOKCD
						, M8.BOOKNM
						, M8.PRICE
						, M8.STOCK
						, P4.STORECD
						, SUM(S1.TRUST_SALE_COUNT + S1.PAY_SALE_COUNT) AS SALE_SUM
						, M2.PURCHNM
						, M7.PURCHCD
						, M2.ORD_GROUPCD
						, NVL(M4.AUTHORNM, ' ') AUTHORNM

			FROM HSA11 S1 LEFT JOIN HMA08 M8 ON (S1.SHOPCD = M8.SHOPCD AND S1.BOOKCD = M8.BOOKCD)
									LEFT JOIN HPO04 P4 ON (S1.SHOPCD = P4.SHOPCD AND S1.TMNO = P4.POSNO)
									LEFT JOIN HMA07 M7 ON (S1.SHOPCD = M7.SHOPCD AND S1.BOOKCD = M7.BOOKCD AND M7.PUR_PROCESS = 1)
									LEFT JOIN HMA02 M2 ON (M7.PURCHCD = M2.PURCHCD)
									LEFT JOIN HMA04 M4 ON (S1.BOOKCD = M4.BOOKCD)

			WHERE S1.SHOPCD = #{SHOPCD}
			<if test='DT_FROM != null'> AND S1.BOOK_DATE >= #{DT_FROM} </if>
			<if test='DT_TO != null'> AND S1.BOOK_DATE <![CDATA[<=]]> #{DT_TO} </if>
			<if test='GROUPCD != null'> AND S1.GROUPCD = #{GROUPCD} </if>
			<if test='STORE_TYPE != null'>
				<choose>
				 		<when test='STORE_TYPE.equals("SINGLE")'>
				 			<if test='STORECD != null'>AND P4.STORECD = #{STORECD}</if>
				 		</when>
				 		<when test='STORE_TYPE.equals("MULTI")'>
				 			<if test='STORECD_S != null'>AND P4.STORECD  BETWEEN #{STORECD_S} AND #{STORECD_E}</if>
				 		</when>
				 		<otherwise>
				 			<if test='STORECD != null'>AND P4.STORECD = #{STORECD}</if>
				 		</otherwise>
				 	</choose>
			 	</if>

			HAVING SUM(S1.TRUST_SALE_COUNT + S1.PAY_SALE_COUNT) > 0
			GROUP BY S1.SHOPCD, S1.DEPTCD, S1.GROUPCD, S1.STANDCD, S1.BOOKCD, M8.BOOKNM, M8.PRICE, M8.STOCK, P4.STORECD, M2.PURCHNM, M7.PURCHCD, M2.ORD_GROUPCD, M4.AUTHORNM

			ORDER BY M2.PURCHNM, M8.BOOKNM

    </select>


    <select id="getSaleDataAuthorList"  parameterType="java.util.Map" resultType="java.util.Map">
    	/* orderMapper.getSaleDataAuthorList */

		WITH T_BOOK_SALE_LIST AS
		(
			SELECT
						s1.SHOPCD
						, s1.BOOKCD
						, p4.STORECD
						, sum(s1.TRUST_SALE_COUNT + s1.PAY_SALE_COUNT) AS SALE_SUM
						, m7.PURCHCD

			FROM hsa11 s1 LEFT JOIN HPO04 p4 ON (s1.SHOPCD = p4.SHOPCD AND s1.TMNO = p4.POSNO)
									LEFT JOIN HMA07 m7 ON (s1.SHOPCD = m7.SHOPCD AND s1.BOOKCD = m7.BOOKCD AND m7.PUR_PROCESS = 1)

			WHERE s1.SHOPCD = #{SHOPCD}
			<if test='DT_FROM != null'> AND s1.BOOK_DATE >= #{DT_FROM} </if>
			<if test='DT_TO != null'> AND s1.BOOK_DATE <![CDATA[<=]]> #{DT_TO} </if>
			<if test='GROUPCD != null'> AND s1.GROUPCD = #{GROUPCD} </if>
			<if test='STORE_TYPE != null'>
				<choose>
				 		<when test='STORE_TYPE.equals("SINGLE")'>
				 			<if test='STORECD != null'>AND p4.STORECD = #{STORECD}</if>
				 		</when>
				 		<when test='STORE_TYPE.equals("MULTI")'>
				 			<if test='STORECD_S != null'>AND p4.STORECD  BETWEEN #{STORECD_S} AND #{STORECD_E}</if>
				 		</when>
				 		<otherwise>
				 			<if test='STORECD != null'>AND p4.STORECD = #{STORECD}</if>
				 		</otherwise>
				 	</choose>
			 	</if>

			HAVING SUM(S1.TRUST_SALE_COUNT + S1.PAY_SALE_COUNT) > 0
			GROUP BY s1.SHOPCD, s1.BOOKCD, p4.STORECD, m7.PURCHCD
		)

		SELECT A.BOOKCD, B.AUTHORNM
		FROM T_BOOK_SALE_LIST A LEFT OUTER JOIN HMA04 B ON (A.BOOKCD = B.BOOKCD)
		GROUP BY A.BOOKCD, B.AUTHORNM

    </select>

    <select id="getSaleDataEstiList"  parameterType="java.util.Map" resultType="java.util.Map">
    	/* orderMapper.getSaleDataList */

		WITH T_BOOK_SALE_LIST AS
		(
			SELECT
						s1.SHOPCD
						, s1.BOOKCD
						, p4.STORECD
						, sum(s1.TRUST_SALE_COUNT + s1.PAY_SALE_COUNT) AS SALE_SUM
						, m7.PURCHCD

			FROM hsa11 s1 LEFT JOIN HPO04 p4 ON (s1.SHOPCD = p4.SHOPCD AND s1.TMNO = p4.POSNO)
									LEFT JOIN HMA07 m7 ON (s1.SHOPCD = m7.SHOPCD AND s1.BOOKCD = m7.BOOKCD AND m7.PUR_PROCESS = 1)

			WHERE s1.SHOPCD = #{SHOPCD}
			<if test='DT_FROM != null'> AND s1.BOOK_DATE >= #{DT_FROM} </if>
			<if test='DT_TO != null'> AND s1.BOOK_DATE <![CDATA[<=]]> #{DT_TO} </if>
			<if test='GROUPCD != null'> AND s1.GROUPCD = #{GROUPCD} </if>
			<if test='STORE_TYPE != null'>
				<choose>
				 		<when test='STORE_TYPE.equals("SINGLE")'>
				 			<if test='STORECD != null'>AND p4.STORECD = #{STORECD}</if>
				 		</when>
				 		<when test='STORE_TYPE.equals("MULTI")'>
				 			<if test='STORECD_S != null'>AND p4.STORECD  BETWEEN #{STORECD_S} AND #{STORECD_E}</if>
				 		</when>
				 		<otherwise>
				 			<if test='STORECD != null'>AND p4.STORECD = #{STORECD}</if>
				 		</otherwise>
				 	</choose>
			 	</if>

			HAVING SUM(S1.TRUST_SALE_COUNT + S1.PAY_SALE_COUNT) > 0
			GROUP BY s1.SHOPCD, s1.BOOKCD, p4.STORECD, m7.PURCHCD
		)

		SELECT A.SHOPCD, A.PURCHCD, A.BOOKCD, NVL(SUM(B.ESTI_COUNT),0) AS ESTI_SUM
		FROM T_BOOK_SALE_LIST A LEFT OUTER JOIN HSP09 B ON (A.SHOPCD = B.SHOPCD AND A.PURCHCD = B.PURCHCD AND A.BOOKCD = B.BOOKCD)
		GROUP BY A.SHOPCD, A.PURCHCD, A.BOOKCD

    </select>

    <select id="getSaleDataRetList"  parameterType="java.util.Map" resultType="java.util.Map">
    	/* orderMapper.getSaleDataList */

		WITH T_BOOK_SALE_LIST AS
		(
			SELECT
						s1.SHOPCD
						, s1.BOOKCD
						, p4.STORECD
						, sum(s1.TRUST_SALE_COUNT + s1.PAY_SALE_COUNT) AS SALE_SUM
						, m7.PURCHCD

			FROM hsa11 s1 LEFT JOIN HPO04 p4 ON (s1.SHOPCD = p4.SHOPCD AND s1.TMNO = p4.POSNO)
									LEFT JOIN HMA07 m7 ON (s1.SHOPCD = m7.SHOPCD AND s1.BOOKCD = m7.BOOKCD AND m7.PUR_PROCESS = 1)

			WHERE s1.SHOPCD = #{SHOPCD}
			<if test='DT_FROM != null'> AND s1.BOOK_DATE >= #{DT_FROM} </if>
			<if test='DT_TO != null'> AND s1.BOOK_DATE <![CDATA[<=]]> #{DT_TO} </if>
			<if test='GROUPCD != null'> AND s1.GROUPCD = #{GROUPCD} </if>
			<if test='STORE_TYPE != null'>
				<choose>
				 		<when test='STORE_TYPE.equals("SINGLE")'>
				 			<if test='STORECD != null'>AND p4.STORECD = #{STORECD}</if>
				 		</when>
				 		<when test='STORE_TYPE.equals("MULTI")'>
				 			<if test='STORECD_S != null'>AND p4.STORECD  BETWEEN #{STORECD_S} AND #{STORECD_E}</if>
				 		</when>
				 		<otherwise>
				 			<if test='STORECD != null'>AND p4.STORECD = #{STORECD}</if>
				 		</otherwise>
				 	</choose>
			 	</if>

			HAVING SUM(S1.TRUST_SALE_COUNT + S1.PAY_SALE_COUNT) > 0
			GROUP BY s1.SHOPCD, s1.BOOKCD, p4.STORECD, m7.PURCHCD
		)

		SELECT A.SHOPCD, A.PURCHCD, A.BOOKCD, NVL(SUM(B.RET_PLAN_COUNT),0) AS RET_SUM
		FROM T_BOOK_SALE_LIST A LEFT OUTER JOIN HRE03 B ON (A.SHOPCD = B.SHOPCD AND A.PURCHCD = B.PURCHCD AND A.BOOKCD = B.BOOKCD)
		GROUP BY A.SHOPCD, A.PURCHCD, A.BOOKCD


    </select>

    <select id="getSaleDataOrdList"  parameterType="java.util.Map" resultType="java.util.Map">
    	/* orderMapper.getSaleDataList */

		WITH T_BOOK_SALE_LIST AS
		(
			SELECT
						s1.SHOPCD
						, s1.BOOKCD
						, p4.STORECD
						, sum(s1.TRUST_SALE_COUNT + s1.PAY_SALE_COUNT) AS SALE_SUM
						, m7.PURCHCD

			FROM hsa11 s1 LEFT JOIN HPO04 p4 ON (s1.SHOPCD = p4.SHOPCD AND s1.TMNO = p4.POSNO)
									LEFT JOIN HMA07 m7 ON (s1.SHOPCD = m7.SHOPCD AND s1.BOOKCD = m7.BOOKCD AND m7.PUR_PROCESS = 1)

			WHERE s1.SHOPCD = #{SHOPCD}
			<if test='DT_FROM != null'> AND s1.BOOK_DATE >= #{DT_FROM} </if>
			<if test='DT_TO != null'> AND s1.BOOK_DATE <![CDATA[<=]]> #{DT_TO} </if>
			<if test='GROUPCD != null'> AND s1.GROUPCD = #{GROUPCD} </if>
			<if test='STORE_TYPE != null'>
				<choose>
				 		<when test='STORE_TYPE.equals("SINGLE")'>
				 			<if test='STORECD != null'>AND p4.STORECD = #{STORECD}</if>
				 		</when>
				 		<when test='STORE_TYPE.equals("MULTI")'>
				 			<if test='STORECD_S != null'>AND p4.STORECD  BETWEEN #{STORECD_S} AND #{STORECD_E}</if>
				 		</when>
				 		<otherwise>
				 			<if test='STORECD != null'>AND p4.STORECD = #{STORECD}</if>
				 		</otherwise>
				 	</choose>
			 	</if>

			HAVING SUM(S1.TRUST_SALE_COUNT + S1.PAY_SALE_COUNT) > 0
			GROUP BY s1.SHOPCD, s1.BOOKCD, p4.STORECD, m7.PURCHCD
		)

		SELECT A.SHOPCD, A.STORECD, A.PURCHCD, A.BOOKCD, SUM(B.ORD_COUNT) AS ORD_SUM, B.ORD_RATE, B.TRADE_ITEM
		FROM T_BOOK_SALE_LIST A LEFT OUTER JOIN HOR01 B ON (A.SHOPCD = B.INP_SHOPCD AND A.STORECD = B.STORECD AND A.PURCHCD = B.PURCHCD AND A.BOOKCD = B.BOOKCD)
		GROUP BY A.SHOPCD, A.STORECD, A.PURCHCD, A.BOOKCD, B.ORD_RATE, B.TRADE_ITEM

    </select>

    <select id="getSaleDataInpList"  parameterType="java.util.Map" resultType="java.util.Map">
    	/* orderMapper.getSaleDataList */

		WITH T_BOOK_SALE_LIST AS
		(
			SELECT
						s1.SHOPCD
						, s1.BOOKCD
						, p4.STORECD
						, sum(s1.TRUST_SALE_COUNT + s1.PAY_SALE_COUNT) AS SALE_SUM
						, m7.PURCHCD

			FROM hsa11 s1 LEFT JOIN HPO04 p4 ON (s1.SHOPCD = p4.SHOPCD AND s1.TMNO = p4.POSNO)
									LEFT JOIN HMA07 m7 ON (s1.SHOPCD = m7.SHOPCD AND s1.BOOKCD = m7.BOOKCD AND m7.PUR_PROCESS = 1)

			WHERE s1.SHOPCD = #{SHOPCD}
			<if test='DT_FROM != null'> AND s1.BOOK_DATE >= #{DT_FROM} </if>
			<if test='DT_TO != null'> AND s1.BOOK_DATE <![CDATA[<=]]> #{DT_TO} </if>
			<if test='GROUPCD != null'> AND s1.GROUPCD = #{GROUPCD} </if>
			<if test='STORE_TYPE != null'>
				<choose>
				 		<when test='STORE_TYPE.equals("SINGLE")'>
				 			<if test='STORECD != null'>AND p4.STORECD = #{STORECD}</if>
				 		</when>
				 		<when test='STORE_TYPE.equals("MULTI")'>
				 			<if test='STORECD_S != null'>AND p4.STORECD  BETWEEN #{STORECD_S} AND #{STORECD_E}</if>
				 		</when>
				 		<otherwise>
				 			<if test='STORECD != null'>AND p4.STORECD = #{STORECD}</if>
				 		</otherwise>
				 	</choose>
			 	</if>

			HAVING SUM(S1.TRUST_SALE_COUNT + S1.PAY_SALE_COUNT) > 0
			GROUP BY s1.SHOPCD, s1.BOOKCD, p4.STORECD, m7.PURCHCD
		)

		SELECT A.SHOPCD, A.STORECD, A.PURCHCD, A.BOOKCD, NVL(SUM(B.INP_PLAN_COUNT),0) AS INP_SUM
		FROM T_BOOK_SALE_LIST A LEFT OUTER JOIN HOR02 B ON (A.SHOPCD = B.INP_SHOPCD AND A.STORECD = B.STORECD AND A.PURCHCD = B.PURCHCD AND A.BOOKCD = B.BOOKCD)
		GROUP BY A.SHOPCD, A.STORECD, A.PURCHCD, A.BOOKCD

    </select>

    <select id="getSaleDataInpRatioList"  parameterType="java.util.Map" resultType="java.util.Map">
    	/* orderMapper.getSaleDataInpRatioList */

		WITH T_BOOK_SALE_LIST AS
		(
			SELECT
						s1.SHOPCD
						, s1.BOOKCD
						, p4.STORECD
						, sum(s1.TRUST_SALE_COUNT + s1.PAY_SALE_COUNT) AS SALE_SUM
						, m7.PURCHCD

			FROM hsa11 s1 LEFT JOIN HPO04 p4 ON (s1.SHOPCD = p4.SHOPCD AND s1.TMNO = p4.POSNO)
									LEFT JOIN HMA07 m7 ON (s1.SHOPCD = m7.SHOPCD AND s1.BOOKCD = m7.BOOKCD AND m7.PUR_PROCESS = 1)

			WHERE s1.SHOPCD = #{SHOPCD}
			<if test='DT_FROM != null'> AND s1.BOOK_DATE >= #{DT_FROM} </if>
			<if test='DT_TO != null'> AND s1.BOOK_DATE <![CDATA[<=]]> #{DT_TO} </if>
			<if test='GROUPCD != null'> AND s1.GROUPCD = #{GROUPCD} </if>
			<if test='STORE_TYPE != null'>
				<choose>
				 		<when test='STORE_TYPE.equals("SINGLE")'>
				 			<if test='STORECD != null'>AND p4.STORECD = #{STORECD}</if>
				 		</when>
				 		<when test='STORE_TYPE.equals("MULTI")'>
				 			<if test='STORECD_S != null'>AND p4.STORECD  BETWEEN #{STORECD_S} AND #{STORECD_E}</if>
				 		</when>
				 		<otherwise>
				 			<if test='STORECD != null'>AND p4.STORECD = #{STORECD}</if>
				 		</otherwise>
				 	</choose>
			 	</if>

			HAVING SUM(S1.TRUST_SALE_COUNT + S1.PAY_SALE_COUNT) > 0
			GROUP BY s1.SHOPCD, s1.BOOKCD, p4.STORECD, m7.PURCHCD
		)

		SELECT A.SHOPCD, A.PURCHCD, A.BOOKCD, NVL(B.RATE, 0) AS RATE
		FROM T_BOOK_SALE_LIST A LEFT OUTER JOIN HMA06 B ON (
		A.SHOPCD = B.SHOPCD
<!-- 		AND A.STORECD = B.STORECD -->
		AND SUBSTR(B.RATE_KBN,1,1) = 1
		AND A.PURCHCD = B.PURCHCD


		AND A.BOOKCD = B.BOOKCD)
		GROUP BY A.SHOPCD, A.PURCHCD, A.BOOKCD, B.RATE

    </select>


    <select id="getSaleDataEsti"  parameterType="java.util.Map" resultType="java.util.Map">
    	/* orderMapper.getSaleDataEsti */

		SELECT NVL(SUM(ESTI_COUNT),0) AS ESTI_SUM
		FROM HSP09
		WHERE SHOPCD = #{SHOPCD}
					AND PURCHCD = #{PURCHCD}
					AND BOOKCD = #{BOOKCD}

    </select>

    <select id="getSaleDataRet"  parameterType="java.util.Map" resultType="java.util.Map">
    	/* orderMapper.getSaleDataRet */


		SELECT NVL(SUM(RET_PLAN_COUNT),0) AS RET_SUM
		FROM  HRE03
		WHERE SHOPCD = #{SHOPCD}
					AND PURCHCD = #{PURCHCD}
					AND BOOKCD = #{BOOKCD}


    </select>

    <select id="getSaleDataOrd"  parameterType="java.util.Map" resultType="java.util.Map">
    	/* orderMapper.getSaleDataOrd */

		SELECT *
		 FROM (
			SELECT SUM(ORD_COUNT) AS ORD_SUM, ORD_RATE, TRADE_ITEM
			FROM HOR01
			WHERE INP_SHOPCD = #{SHOPCD}
						AND STORECD = #{STORECD}
						AND PURCHCD = #{PURCHCD}
						AND BOOKCD = #{BOOKCD}

			GROUP BY ORD_RATE, TRADE_ITEM
		)
		WHERE ROWNUM <![CDATA[<]]> 2

    </select>

    <select id="getSaleDataInp"  parameterType="java.util.Map" resultType="java.util.Map">
    	/* orderMapper.getSaleDataInp */

		SELECT NVL(SUM(INP_PLAN_COUNT),0) AS INP_SUM
		FROM HOR02
		WHERE INP_SHOPCD = #{SHOPCD}
					AND STORECD = #{STORECD}
					AND PURCHCD = #{PURCHCD}
					AND BOOKCD = #{BOOKCD}

    </select>

    <select id="getSaleDataInpRatio"  parameterType="java.util.Map" resultType="java.util.Map">
    	/* orderMapper.getSaleDataInpRatio */


		SELECT NVL(RATE, 0) AS RATE
		FROM HMA06
		WHERE SHOPCD = #{SHOPCD}
					AND PURCHCD = #{PURCHCD}
					AND SUBSTR(RATE_KBN,1,1) = 1
					AND BOOKCD = #{BOOKCD}

    </select>


	<select id="getOrderDataList"  parameterType="java.util.Map" resultType="java.util.Map">
    	/* orderMapper.getOrderDataList */

		WITH T_ORDER_LIST AS
		(
			SELECT DISTINCT
							T1.BOOKCD
							, T1.PURCHNM
							, T1.GROUPCD
							, T1.PURCHCD


				FROM  HOR01 T1 LEFT JOIN HMA10 T2 ON (T1.INP_SHOPCD = T2.SHOPCD AND T1.GROUPCD = T2.GROUPCD AND T1.STANDCD = T2.STANDCD)

				WHERE T1.INP_SHOPCD = #{SHOPCD}
				AND T1.STORECD IN <foreach collection="LIST_STORECD" item="item" open="(" close=")" separator=","> #{item}</foreach>
				<if test='RATECD != null'> AND T2.RATE = #{RATECD} </if>
				<if test='INP_GROUPCD != null'> AND T1.INP_GROUPCD = #{INP_GROUPCD}</if>
				<if test='GROUPCD != null'> AND T1.INP_GROUPCD = #{GROUPCD}</if>

				<if test='DT_ORDER != null'> AND T1.ORD_DATE = #{DT_ORDER} </if>
				<if test='TRADE_ITEM != null'> AND T1.TRADE_ITEM = #{TRADE_ITEM} </if>
				<if test='PURCHCD != null'> AND T1.PURCHCD = #{PURCHCD} </if>
				AND T1.ORD_COUNT    > 0

	<!-- 			<if test='STORE_TYPE != null'> -->
	<!-- 				<choose> -->
	<!-- 				 		<when test='STORE_TYPE.equals("SINGLE")'> -->
	<!-- 				 			<if test='STORECD != null'>AND p4.STORECD = #{STORECD}</if> -->
	<!-- 				 		</when> -->
	<!-- 				 		<when test='STORE_TYPE.equals("MULTI")'> -->
	<!-- 				 			<if test='STORECD_S != null'>AND p4.STORECD  BETWEEN #{STORECD_S} AND #{STORECD_E}</if> -->
	<!-- 				 		</when> -->
	<!-- 				 		<otherwise> -->
	<!-- 				 			<if test='STORECD != null'>AND p4.STORECD = #{STORECD}</if> -->
	<!-- 				 		</otherwise> -->
	<!-- 				 	</choose> -->
	<!-- 			 	</if> -->
			)

			SELECT
				 O1.PURCHNM
				, O1.BOOKNM
				, M8.STOCK
				<foreach collection="LIST_STORECD_EX" item="item" open="" close="" separator="">
				, NVL(SUM(DECODE(O1.STORECD,#{item.STORECD},O1.ORD_COUNT )),0) AS ${item.STORECD_COL}</foreach>
				, O1.BOOKCD
				, O1.PURCHCD
				, M8.PUBSHCD
				, M11.PUBSHNM
				, O1.INP_GROUPCD
				, O1.STANDCD
			FROM T_ORDER_LIST A LEFT JOIN  HOR01 O1 ON (O1.BOOKCD = A.BOOKCD AND O1.PURCHCD = A.PURCHCD AND O1.BOOKCD = A.BOOKCD)
										LEFT JOIN HMA08 M8 ON (O1.INP_SHOPCD = M8.SHOPCD AND O1.BOOKCD = M8.BOOKCD)
										LEFT JOIN HMA11 M11 ON (M8.PUBSHCD = M11.PUBSHCD)
										LEFT JOIN HMA10 T2 ON (O1.INP_SHOPCD = T2.SHOPCD AND O1.GROUPCD = T2.GROUPCD AND O1.STANDCD = T2.STANDCD)

			WHERE O1.INP_SHOPCD = #{SHOPCD}
				<if test='RATECD != null'> AND T2.RATE = #{RATECD} </if>
				<if test='GROUPCD != null'> AND O1.INP_GROUPCD = #{GROUPCD}</if>
				<if test='STANDCD != null'> AND O1.STANDCD = #{STANDCD}</if>
				<if test='DT_ORDER != null'> AND O1.ORD_DATE = #{DT_ORDER} </if>
				<if test='TRADE_ITEM != null'> AND O1.TRADE_ITEM = #{TRADE_ITEM} </if>
				<if test='PURCHCD != null'> AND O1.PURCHCD = #{PURCHCD} </if>

			GROUP BY O1.PURCHNM, O1.BOOKNM ,M8.STOCK ,O1.BOOKCD ,O1.PURCHCD ,M8.PUBSHCD, M11.PUBSHNM, O1.INP_GROUPCD, O1.STANDCD
			ORDER BY O1.PURCHNM, O1.BOOKCD
    </select>




    <select id="checkPurchCd" parameterType="java.util.Map" resultType="java.util.Map">
    	/* orderMapper.checkPurchCd */
			SELECT *
			FROM (
				SELECT
					A.PURCHCD
					, A.PURCHNM
					, A.ORD_GROUPCD
				FROM HMA02 A LEFT JOIN HMA24 B ON (A.PURCHCD = B.PURCHCD)
				WHERE B.SHOPCD = #{SHOPCD}
				<if test='PURCHCD != null'>AND A.PURCHCD = #{PURCHCD}</if>
				<if test='PURCHNM != null'>AND A.PURCHNM = #{PURCHNM}</if>
				)
			WHERE ROWNUM <![CDATA[<=]]> 1
    </select>

    <select id="getOrderBookExist" parameterType="java.util.Map" resultType="java.util.Map">
    	/* orderMapper.getOrderBookExist */
			SELECT NVL(ORD_COUNT, 0) AS CNT
			FROM HOR01
			WHERE INP_SHOPCD = #{SHOPCD}
						AND STORECD = #{STORECD}
						AND INP_GROUPCD = #{INP_GROUPCD}
						AND ORD_DATE = #{ORD_DATE}
						AND TRADE_ITEM = #{TRADE_ITEM}
						AND PURCHCD = #{PURCHCD}
						AND BOOKCD =#{BOOKCD}
    </select>

    <insert id="createOrderBook" parameterType="java.util.Map" >
    	/* orderMapper.createOrderBook */
			INSERT INTO HOR01 VALUES(
				#{SHOPCD}
				, #{STORECD}
				, #{INP_GROUPCD}
				, #{ORD_DATE}
				, #{TRADE_ITEM}
				, #{PURCHCD}
				, #{BOOKCD}
				, #{ORD_GROUPCD}
				, #{GROUPCD}
				, #{STANDCD}
				, #{INP_DATE}
				, #{ORD_CNT}
				, #{ORD_RATE}
				, #{ORD_COST}
				, #{BOOKNM}
				, #{AUTHORNM}
				, #{PURCHNM}
				)

    </insert>

    <update id="UpdateOrderBook" parameterType="java.util.Map" >
    	/* orderMapper.UpdateOrderBook */
			UPDATE HOR01 SET
				ORD_COUNT = ORD_COUNT + #{ORD_CNT}
				, ORD_RATE = #{ORD_RATE}
			WHERE INP_SHOPCD = #{SHOPCD}
					AND STORECD = #{STORECD}
					AND INP_GROUPCD = #{INP_GROUPCD}
					AND ORD_DATE = #{ORD_DATE}
					AND TRADE_ITEM = #{TRADE_ITEM}
					AND PURCHCD = #{PURCHCD}
					AND BOOKCD =#{BOOKCD}
    </update>

    <update id="updateOrderBookInfo" parameterType="java.util.Map" >
    	/* orderMapper.updateOrderBookInfo */
			UPDATE HOR01 SET
				INP_SHOPCD = #{INP_SHOPCD}
				<if test='ORD_COUNT != null'> , ORD_COUNT = #{ORD_COUNT}</if>
			WHERE INP_SHOPCD = #{INP_SHOPCD}
					AND STORECD = #{STORECD}
					AND INP_GROUPCD = #{INP_GROUPCD}
					AND ORD_DATE = #{ORD_DATE}
					AND TRADE_ITEM = #{TRADE_ITEM}
					AND PURCHCD = #{PURCHCD}
					AND BOOKCD =#{BOOKCD}
    </update>

    <delete id="deleteOrderBookInfo" parameterType="java.util.Map" >
    	/* orderMapper.deleteOrderBookInfo */
			DELETE
			FROM HOR01
			WHERE INP_SHOPCD = #{INP_SHOPCD}
			<if test='STORECD != null'> AND STORECD= #{STORECD} </if>
			<if test='STORECD_S != null'> AND STORECD BETWEEN #{STORECD_S} AND #{STORECD_E} </if>

			<if test='INP_GROUPCD != null'> AND INP_GROUPCD = #{INP_GROUPCD}</if>
<!-- 			<if test='GROUPCD != null'> AND INP_GROUPCD = #{GROUPCD}</if> -->

			<if test='PURCHCD != null'> AND PURCHCD = #{PURCHCD}</if>
<!-- 			<if test='PUBSHCD != null'> AND PUBSHCD = #{PUBSHCD}</if> -->

			<if test='DT_ORDER != null'> AND ORD_DATE = #{DT_ORDER}</if>
			<if test='TRADE_ITEM != null'> AND TRADE_ITEM = #{TRADE_ITEM}</if>
			<if test='BOOKCD != null'> AND BOOKCD = #{BOOKCD}</if>

    </delete>


     <select id="selectOrderBookInfo" parameterType="java.util.Map" resultType="int">
    	/* orderMapper.selectOrderBookInfo */
			SELECT COUNT(*)
			FROM HOR01
			WHERE INP_SHOPCD = #{INP_SHOPCD}
			<if test='STORECD != null'> AND STORECD= #{STORECD} </if>
			<if test='STORECD_S != null'> AND STORECD BETWEEN #{STORECD_S} AND #{STORECD_E} </if>

			<if test='INP_GROUPCD != null'> AND INP_GROUPCD = #{INP_GROUPCD}</if>
<!-- 			<if test='GROUPCD != null'> AND INP_GROUPCD = #{GROUPCD}</if> -->

			<if test='PURCHCD != null'> AND PURCHCD = #{PURCHCD}</if>
<!-- 			<if test='PUBSHCD != null'> AND PUBSHCD = #{PUBSHCD}</if> -->

			<if test='DT_ORDER != null'> AND ORD_DATE = #{DT_ORDER}</if>
			<if test='TRADE_ITEM != null'> AND TRADE_ITEM = #{TRADE_ITEM}</if>
			<if test='BOOKCD != null'> AND BOOKCD = #{BOOKCD}</if>

    </select>

    <select id="selectOrderBookList" parameterType="java.util.Map" resultType="java.util.Map">
    	/* orderMapper.selectOrderBookList */
			SELECT
				O1.INP_SHOPCD
				, O1.STORECD
				, O1.INP_GROUPCD
				, O1.ORD_DATE
				, O1.TRADE_ITEM
				, O1.PURCHCD
				, O1.BOOKCD
				, O1.ORD_GROUPCD
				, O1.GROUPCD
				, O1.STANDCD
				, O1.INP_DATE
				, NVL(O1.ORD_COUNT, 0) ORD_COUNT
				, NVL(O1.ORD_RATE, 0) ORD_RATE
				, NVL(O1.ORD_COST, 0) ORD_COST
				, NVL(O1.BOOKNM, ' ') BOOKNM
				, NVL(O1.AUTHORNM, ' ') AUTHORNM
				, NVL(O1.PURCHNM, ' ') PURCHNM
				, NVL(H8.PRICE, 0) PRICE
				, H8.PUBSHCD
				, NVL(H1.PUBSHNM, ' ') PUBSHNM
				, NVL(H2.TEL_LOCAL1, ' ') TEL_LOCAL1
				, NVL(H2.TEL_DEPT1, ' ') TEL_DEPT1
				, NVL(H2.TEL_NO1, ' ') TEL_NO1
				, NVL(H2.FAX_LOCAL, ' ') FAX_LOCAL
				, NVL(H2.FAX_DEPT, ' ') FAX_DEPT
				, NVL(H2.FAX_NO, ' ') FAX_NO
				, H8.DEPTCD
				, NVL(E.BOOKCD, -1) AS HMA06_BOOKCD

			FROM
			HOR01 O1 LEFT JOIN HMA08 H8 ON (O1.INP_SHOPCD = H8.SHOPCD AND O1.BOOKCD = H8.BOOKCD)
			LEFT OUTER JOIN HMA11 H1 ON (H8.PUBSHCD = H1.PUBSHCD)
			LEFT OUTER JOIN HMA02 H2 ON (O1.PURCHCD = H2.PURCHCD)
			LEFT JOIN HMA10 T2 ON (O1.INP_SHOPCD = T2.SHOPCD AND O1.GROUPCD = T2.GROUPCD AND O1.STANDCD = T2.STANDCD)
			LEFT OUTER JOIN HMA06 E ON (O1.INP_SHOPCD = E.SHOPCD AND O1.BOOKCD = E.BOOKCD AND O1.PURCHCD = E.PURCHCD AND O1.ORD_RATE = E.RATE)

			WHERE
			O1.INP_SHOPCD = #{INP_SHOPCD}
			<if test='STORECD != null'> AND O1.STORECD= #{STORECD} </if>
			<if test='STORECD_S != null'> AND O1.STORECD BETWEEN #{STORECD_S} AND #{STORECD_E} </if>
			<if test='RATE != null'> AND T2.RATE = #{RATE}</if>
			<if test='INP_GROUPCD != null'> AND O1.INP_GROUPCD = #{INP_GROUPCD}</if>
			<if test='PURCHCD != null'> AND O1.PURCHCD = #{PURCHCD}</if>
			AND O1.ORD_DATE = #{ORD_DATE}
			AND O1.TRADE_ITEM = #{TRADE_ITEM}

			ORDER BY O1.PURCHNM, O1.BOOKNM
    </select>

    <select id="getHOR02MaxSeq" parameterType="java.util.Map" resultType="int">
    	/* orderMapper.getHMA02MaxSeq */
			SELECT NVL(MAX(SEQ_NO), 0) SEQ_NO
			FROM HOR02
			WHERE INP_SHOPCD = #{INP_SHOPCD}
			AND STORECD= #{STORECD}
			AND INP_GROUPCD = #{INP_GROUPCD}
			AND ORD_DATE = #{ORD_DATE}
			AND TRADE_ITEM = #{TRADE_ITEM}
			AND BOOKCD = #{BOOKCD}
    </select>


    <insert id="insertOrderBookConfirm" parameterType="java.util.Map">
    	/* orderMapper.insertOrderBookConfirm */
			INSERT INTO HOR02 VALUES(
				#{INP_SHOPCD}, #{STORECD}, #{INP_GROUPCD}, #{ORD_DATE}, #{TRADE_ITEM},
				#{BOOKCD}, #{SEQ_NO}, #{PURCHCD}, #{PUBSHCD}, #{ORD_GROUPCD},
				#{DEPTCD}, #{GROUPCD}, #{STANDCD}, #{INP_DATE}, #{ORD_COUNT},
				#{ORD_RATE}, #{ORD_COST}, 1, #{BOOKNM}, #{PURCHNM},
				#{PUBSHNM}, #{AUTHORNM}, #{PRICE}, #{TEL_LOCAL1}, #{TEL_DEPT1},
				#{TEL_NO1}, #{FAX_LOCAL}, #{FAX_DEPT}, #{FAX_NO}, 1
			)
    </insert>

	<select id="getUnregisteredBookList"  parameterType="java.util.Map" resultType="java.util.Map">
    	/* orderMapper.getUnregisteredBookList */

			SELECT
						NVL(BOOKNM,' ') AS BOOKNM
						, NVL(PURCHNM,' ') AS PURCHNM
						, NVL(AUTHORNM,' ') AS AUTHORNM
						, NVL(TRADE_ITEM,0) AS TRADE_ITEM
						, NVL(ORD_COUNT,0) AS ORD_COUNT
			FROM HOR03

			WHERE SHOPCD = #{SHOPCD}
						AND STORECD = #{STORECD}
						AND ORD_DATE = #{ORD_DATE}

			ORDER BY BOOKNM

    </select>


     <delete id="deleteUnregisterdOrderBook" parameterType="java.util.Map" >
    	/* orderMapper.deleteUnregisterdOrderBook */
			DELETE
			FROM HOR03
			WHERE SHOPCD = #{SHOPCD}
						AND STORECD= #{STORECD}
						AND ORD_DATE= #{ORD_DATE}
    </delete>

    <insert id="insertUnregisterdOrderBook" parameterType="java.util.Map">
    	/* orderMapper.insertUnregisterdOrderBook */
			INSERT INTO HOR03 VALUES(
				#{SHOPCD}, #{STORECD}, #{ORD_DATE}, #{ROW_NO},
				#{BOOKNM}, #{PURCHNM}, #{AUTHORNM}, #{TRADE_ITEM}, #{ORD_COUNT}, 0
			)
    </insert>

	<select id="getUnregisterdOrderBookMaxRowNo"  parameterType="java.util.Map" resultType="int">
    	/* orderMapper.getUnregisterdOrderBookMaxRowNo */

			SELECT MAX(ROW_NO) FROM HOR03

    </select>


    <select id="getRegisterdOrderBookList"  parameterType="java.util.Map" resultType="java.util.Map">
    	/* orderMapper.getRegisterdOrderBookList */

		SELECT
						O2.STORECD
						, O2.BOOKCD
						, O2.BOOKNM
						, O2.PURCHNM
						, O2.PURCHCD
						, O2.AUTHORNM
						, O2.PRICE
						, NVL(M10.ORGAN_NM, '미등록조') AS GROUP_NM
						, O2.INP_PLAN_COUNT AS ORD_COUNT

						, NVL(M11.PUBSHNM, '') AS PUBSHNM
						, NVL2(M02.PURCHNM, M02.TEL_LOCAL1||'-'||M02.TEL_DEPT1||'-'||M02.TEL_NO1,'- -') AS TEL
						, NVL2(M02.PURCHNM, M02.FAX_LOCAL||'-'||M02.FAX_DEPT||'-'||M02.FAX_NO,'- -') AS FAX

			FROM HOR02 O2 LEFT OUTER JOIN HMA10 M10 ON (M10.STANDCD = 9999 AND M10.GROUPCD = O2.INP_GROUPCD AND M10.SHOPCD = O2.INP_SHOPCD AND M10.DEPTCD = O2.DEPTCD)
			LEFT OUTER JOIN HMA11 M11 ON (O2.PUBSHCD = M11.PUBSHCD)
			LEFT OUTER JOIN HMA02 M02 ON (O2.PURCHCD = M02.PURCHCD)


			WHERE O2.INP_SHOPCD = #{SHOPCD}
			<if test='ORD_DATE != null'> AND O2.ORD_DATE = #{ORD_DATE} </if>
			<if test='GROUPCD != null'> AND O2.INP_GROUPCD = #{GROUPCD} </if>
<!-- 			<if test='RATE != null'> AND M10.RATE = #{RATE} </if> -->

			ORDER BY O2.PURCHNM, O2.BOOKNM

    </select>

    <select id="getUnregisterdOrderBookList"  parameterType="java.util.Map" resultType="java.util.Map">
    	/* orderMapper.getUnregisterdOrderBookList */

		SELECT
						O3.STORECD
<!-- 						, O2.BOOKCD -->
						, O3.BOOKNM
						, O3.PURCHNM
						, O3.AUTHORNM
						, '미등록조' AS GROUP_NM
						, O3.ORD_COUNT
						, '' AS PUBSHNM
						, 0 AS PRICE
						, NVL2(M02.PURCHNM, M02.TEL_LOCAL1||'-'||M02.TEL_DEPT1||'-'||M02.TEL_NO1,'- -') AS TEL
						, NVL2(M02.PURCHNM, M02.FAX_LOCAL||'-'||M02.FAX_DEPT||'-'||M02.FAX_NO,'- -') AS FAX

			FROM HOR03 O3 LEFT OUTER JOIN HMA02 M02 ON (SUBSTR(O3.PURCHNM, 0,6) = M02.PURCHCD)
<!-- 			 LEFT JOIN HMA10 M10 ON (M10.GROUPCD != 99 AND M10.STANDCD = 9999 AND M10.GROUPCD = O2.ORD_GROUPCD) -->



			WHERE O3.SHOPCD = #{SHOPCD}
			<if test='ORD_DATE != null'> AND O3.ORD_DATE = #{ORD_DATE} </if>
<!-- 			<if test='GROUPCD != null'> AND O2.INP_GROUPCD = #{GROUPCD} </if> -->
<!-- 			<if test='RATE != null'> AND M10.RATE = #{RATE} </if> -->

			ORDER BY O3.PURCHNM, O3.BOOKNM

    </select>

    <select id="getRegisteredOrderDataList"  parameterType="java.util.Map" resultType="java.util.Map">
    	/* orderMapper.getRegisteredOrderDataList */

			SELECT

				O2.BOOKNM
				<foreach collection="LIST_STORECD_EX" item="item" open="" close="" separator="">
				, NVL(SUM(DECODE(O2.STORECD,#{item.STORECD},O2.INP_PLAN_COUNT )),0) AS ${item.STORECD_COL}</foreach>
				, O2.PURCHCD
				, O2.PURCHNM

			FROM HOR02 O2

			WHERE O2.INP_SHOPCD = #{SHOPCD}
			AND O2.STORECD IN <foreach collection="LIST_STORECD" item="item" open="(" close=")" separator=","> #{item}</foreach>
			AND O2.ORD_DATE = #{ORD_DATE}

			GROUP BY O2.BOOKNM, O2.PURCHNM, O2.PURCHCD
			ORDER BY O2.PURCHNM,  O2.BOOKNM
    </select>

    <select id="getUnregisteredOrderDataList"  parameterType="java.util.Map" resultType="java.util.Map">
    	/* orderMapper.getUnregisteredOrderDataList */

			SELECT

				O3.BOOKNM
				<foreach collection="LIST_STORECD_EX" item="item" open="" close="" separator="">
				, NVL(SUM(DECODE(O3.STORECD,#{item.STORECD},O3.ORD_COUNT )),0) AS ${item.STORECD_COL}</foreach>
				, SUBSTR(O3.PURCHNM, 0,6) AS PURCHCD
				, O3.PURCHNM

			FROM HOR03 O3

			WHERE O3.SHOPCD = #{SHOPCD}
			AND O3.STORECD IN <foreach collection="LIST_STORECD" item="item" open="(" close=")" separator=","> #{item}</foreach>
			AND O3.ORD_DATE = #{ORD_DATE}

			GROUP BY O3.BOOKNM, O3.PURCHNM
			ORDER BY O3.PURCHNM,  O3.BOOKNM
    </select>




</mapper>
